{"version":3,"sources":["fbase.js","routes/Auth.js","components/Nweet.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseUrl","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onSocialClick","type","placeholder","required","onClick","prev","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","Home","userObj","nweet","setNweet","nweets","setNweets","attachment","setAttachment","useEffect","collection","onSnapshot","snapshot","newArray","docs","map","document","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","add","createdAt","Date","now","creatorId","uid","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Profile","history","useHistory","signOut","push","Navigation","to","displayName","AppRouter","isLoggedIn","refreshUser","exact","path","App","init","setInit","currentUser","setIsLoggedIn","setUserObj","onAuthStateChanged","user","updateProfile","args","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ef787a2d.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseUrl: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  \r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n\r\n\r\n\r\n","import { authService} from \"fbase\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create newAccount\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    var provider;\r\n    if (name === \"google\") {\r\n     // provider = pro;\r\n    } else if (name === \"github\") {\r\n     // provider = gitpro;//new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n   // const data = await authService.signInWithPopup(provider);\r\n   // console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n        {error}\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"google\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\">\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n\r\n    if (ok) {\r\n     \r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      if (nweetObj.attachmentUrl !== \"\")\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n    setEditing(false);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input onChange={onChange} value={newNweet} required />\r\n            <input type=\"submit\" value=\"Update Nweet\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { deleteDoc, getFirestore, doc, updateDoc } from 'firebase/firestore';\r\n\r\nconst Home = ({ userObj }) => {\r\n\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [nweets, setNweets] = useState([]);\r\n  const [attachment, setAttachment] = useState(\"\");\r\n \r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const newArray = snapshot.docs.map((document) => ({\r\n        id: document.id,\r\n        ...document.data(),\r\n      }));\r\n      setNweets(newArray);\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      \r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.email}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    await dbService.collection(\"nweets\").add({\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    });\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n        <input type=\"submit\" value=\"Nweet\" />\r\n        {attachment && (\r\n          <div>\r\n            <img src={attachment} width=\"50px\" height=\"50px\" />\r\n            <button onClick={onClearAttachment}>Clear</button>\r\n          </div>\r\n        )}\r\n      </form>\r\n      <div>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Home;","import { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = () => {\r\n    const history = useHistory();\r\n  \r\n    const onLogOutClick = () => {\r\n      authService.signOut();\r\n      history.push(\"/\");\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default Profile;","import { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">{userObj.displayName} Profile</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile refreshUser={refreshUser} userObj={userObj} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n       \n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n    </>\n  );\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}